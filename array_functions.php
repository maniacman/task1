Задачи для решения
Работа с count
Для решения задач данного блока вам понадобятся следующие функции: count.
1) Дан массив $arr. Подсчитайте количество элементов этого массива.
$arr = [1, 2, 3, 4, 5];
echo count($arr);

2) Дан массив $arr. С помощью функции count выведите последний элемент данного массива.
$arr = [1, 2, 3, 4, 5];
echo $arr[count($arr) - 1];

Работа с in_array
Для решения задач данного блока вам понадобятся следующие функции: in_array.
3) Дан массив с числами. Проверьте, что в нем есть элемент со значением 3.
$arr = [1, 2, 3, 4, 5];
if (in_array(3, $arr)) echo 'этот элемент есть в массиве'; else echo 'этого элемента нет в массиве';

Работа с array_sum и array_product
Для решения задач данного блока вам понадобятся следующие функции: array_sum, array_product.
4) Дан массив [1, 2, 3, 4, 5]. Найдите сумму элементов данного массива.
$arr = [1, 2, 3, 4, 5];
echo array_sum($arr);

5) Дан массив [1, 2, 3, 4, 5]. Найдите произведение (умножение) элементов данного массива.
$arr = [1, 2, 3, 4, 5];
echo array_product($arr);

6) Дан массив $arr. С помощью функций array_sum и count найдите среднее арифметическое элементов (сумма элементов делить на их количество) данного массива.
$arr = [1, 2, 3, 4, 5];
echo 'среднее арифметическое элементов данного массива = ' . array_sum($arr) / count($arr);

Работа с range
Для решения задач данного блока вам понадобятся следующие функции: range.
7) Создайте массив, заполненный числами от 1 до 100.
$arr = range(1, 100);

8) Создайте массив, заполненный буквами от 'a' до 'z'.
$arr = range(a, z);

9) Создайте строку '1-2-3-4-5-6-7-8-9' не используя цикл. Показать подсказку. Подсказка: используйте функции range и implode.
$arr = range(1, 9);
$string = implode('-', $arr);
echo $string;

10) Найдите сумму чисел от 1 до 100 не используя цикл.
$arr = range(1,100);
echo array_sum($arr);

11) Найдите произведение чисел от 1 до 10 не используя цикл.
$arr = range(1,10);
echo array_product($arr);

Работа с array_merge
Для решения задач данного блока вам понадобятся следующие функции: array_merge.
12) Даны два массива: первый с элементами 1, 2, 3, второй с элементами 'a', 'b', 'c'. Сделайте из них массив с элементами 1, 2, 3, 'a', 'b', 'c'.
$arr1 = [1, 2, 3];
$arr2 = ['a', 'b', 'c'];
$result = array_merge($arr1, $arr2);
print_r($result);

Работа с array_slice
Для решения задач данного блока вам понадобятся следующие функции: array_slice.
13) Дан массив с элементами 1, 2, 3, 4, 5. С помощью функции array_slice создайте из него массив $result с элементами 2, 3, 4.
$arr = [1, 2, 3, 4, 5];
$result = array_slice($arr, 1, 3);
print_r($result);

Работа с array_splice
Для решения задач данного блока вам понадобятся следующие функции: array_splice.
14) Дан массив [1, 2, 3, 4, 5]. С помощью функции array_splice преобразуйте массив в [1, 4, 5].
$arr = [1, 2, 3, 4, 5];
array_splice($arr, 1, -2);
print_r($arr);

15) Дан массив [1, 2, 3, 4, 5]. С помощью функции array_splice запишите в новый массив элементы [2, 3, 4].
$arr = [1, 2, 3, 4, 5];
$result = array_splice($arr, 1, 3);
print_r($result);

16) Дан массив [1, 2, 3, 4, 5]. С помощью функции array_splice сделайте из него массив [1, 2, 3, 'a', 'b', 'c', 4, 5].
$arr = [1, 2, 3, 4, 5];
array_splice($arr,3,0,['a','b','c']); 
print_r($arr);

17) Дан массив [1, 2, 3, 4, 5]. С помощью функции array_splice сделайте из него массив [1, 'a', 'b', 2, 3, 4, 'c', 5, 'e'].
$arr = [1, 2, 3, 4, 5];
array_splice($arr,1,0,['a','b']); 
array_splice($arr,6,0,['c']); 
array_splice($arr,8,0,['e']);
print_r($arr);

Работа с array_keys, array_values, array_combine
Для решения задач данного блока вам понадобятся следующие функции: array_keys, array_values, array_combine.
18) Дан массив 'a'=>1, 'b'=>2, 'c'=>3'. Запишите в массив $keys ключи из этого массива, а в $values – значения.
$arr = ['a' => 1, 'b' => 2, 'c' => 3]; 
$key = array_keys($arr); 
$values = array_values($arr); 
print_r($key); 
print_r($values);

19) Даны два массива: ['a', 'b', 'c'] и [1, 2, 3]. Создайте с их помощью массив 'a'=>1, 'b'=>2, 'c'=>3'.
$arr1 = ['a', 'b', 'c'];
$arr2 = [1, 2, 3];
$result = array_combine($arr1, $arr2);
print_r($result);

Работа с array_flip, array_reverse
Для решения задач данного блока вам понадобятся следующие функции: array_flip, array_reverse.
20) Дан массив 'a'=>1, 'b'=>2, 'c'=>3. Поменяйте в нем местами ключи и значения.
$arr = ['a' => 1, 'b' => 2, 'c' => 3];
$result = array_flip($arr);
print_r($result);

21) Дан массив с элементами 1, 2, 3, 4, 5. Сделайте из него массив с элементами 5, 4, 3, 2, 1.
$arr = [1, 2, 3, 4, 5];
$arr = array_reverse($arr);
print_r($arr);

Работа с array_search
Для решения задач данного блока вам понадобятся следующие функции: array_search.
22) Дан массив ['a', '-', 'b', '-', 'c', '-', 'd']. Найдите позицию первого элемента '-'.
$arr = ['a', '-', 'b', '-', 'c', '-', 'd']; 
echo array_search('-', $arr);

23) Дан массив ['a', '-', 'b', '-', 'c', '-', 'd']. Найдите позицию первого элемента '-' и удалите 
его с помощью функции array_splice.
$arr = ['a', '-', 'b', '-', 'c', '-', 'd'];
$pos = array_search('-', $arr);
array_splice($arr, $pos, 1);
print_r($arr);

Работа с array_replace
Для решения задач данного блока вам понадобятся следующие функции: array_replace.
24) Дан массив ['a', 'b', 'c', 'd', 'e']. Поменяйте элемент с ключом 0 на '!', а элемент с ключом 3 - на '!!'.
$arr = ['a', 'b', 'c', 'd', 'e'];
$result = array_replace($arr, [0 => '!', 3 => '!!']);
print_r($result);

Работа с сортировку
Для решения задач данного блока вам понадобятся следующие функции: функции для сортировки,
25) Дан массив '3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'. Попробуйте на нем различные типы сортировок.
$arr = ['3' => 'a', '1' => 'c', '2' => 'e', '4' => 'b'];
sort($arr); //по ключам
print_r($arr);

$arr = ['3' => 'a', '1' => 'c', '2' => 'e', '4' => 'b'];
asort($arr); //по значениям
print_r($arr);

Работа с array_rand
Для решения задач данного блока вам понадобятся следующие функции: array_rand.
26) Дан массив с элементами 'a'=>1, 'b'=>2, 'c'=>3. Выведите на экран случайный ключ из данного массива.
$arr = ['a' => 1, 'b' => 2, 'c' => 3];
$key = array_rand($arr);
print_r($key); 

27) Дан массив с элементами 'a'=>1, 'b'=>2, 'c'=>3. Выведите на экран случайный элемент данного массива.
$arr = ['a' => 1, 'b' => 2, 'c' => 3];
$key = array_rand($arr);
echo $arr[$key];

Работа с shuffle
Для решения задач данного блока вам понадобятся следующие функции: shuffle.
28) Дан массив $arr. Перемешайте его элементы в случайном порядке.
$arr = [1, 2, 3, 4, 5, 6];
shuffle($arr);
print_r($arr);

29) Заполните массив числами от 1 до 25 с помощью range, а затем перемешайте его элементы в случайном порядке.
$arr = range(1, 25);
shuffle($arr);
print_r($arr);

30) Создайте массив, заполненный буквами от 'a' до 'z' так, чтобы буквы шли в случайном порядке и не повторялись.
$arr = range('a', 'z');
shuffle($arr);
print_r($arr);

31) Сделайте строку длиной 6 символов, состоящую из маленьких английских букв, расположенных в случайном порядке. 
Буквы не должны повторяться.
$arr = range('a', 'z');
shuffle($arr);
echo implode('', array_slice($arr, 13,6));

Работа с array_unique
Для решения задач данного блока вам понадобятся следующие функции: array_unique.
32) Дан массив с элементами 'a', 'b', 'c', 'b', 'a'. Удалите из него повторяющиеся элементы.
$arr = ['a', 'b', 'c', 'b', 'a'];
$arr = array_unique($arr);
print_r($arr);

Работа с array_shift, array_pop, array_unshift, array_push
Для решения задач данного блока вам понадобятся следующие функции: array_shift, array_pop, array_unshift, array_push.
33) Дан массив с элементами 1, 2, 3, 4, 5. Выведите на экран его первый и последний элемент, причем так, 
чтобы в исходном массиве они исчезли.
$arr = [1, 2, 3, 4, 5];
echo array_shift($arr) . ' ' . array_pop($arr);
print_r($arr);

34) Дан массив с элементами 1, 2, 3, 4, 5. Добавьте ему в начало элемент 0, а в конец - элемент 6
$arr = [1, 2, 3, 4, 5];
array_unshift($arr, 0);
array_push($arr, 6);
print_r($arr);

35) Дан массив с элементами 1, 2, 3, 4, 5, 6, 7, 8. С помощью цикла и функций array_shift и array_pop 
выведите на экран его элементы в следующем порядке: 18273645. Показать решение. Показать решение.
Решение:
<?php
$arr = [1, 2, 3, 4, 5, 6, 7, 8];
$str = '';
while (count($arr) > 0) {
	$str .= array_shift($arr);
	$str .= array_pop($arr);
}
echo $str;
?>
Как оно работает: в цикле от массива отщипывается первый и последний элементы и записываются в $str. При этом сам массив уменьшается и как только он окончательно уменьшится - условие count($arr) > 0 закончит цикл. Способ ресурсоемкий, так как при каждом проходе цикла count вызывается заново, зато изящный.

Работа с array_pad, array_fill, array_fill_keys, array_chunk
Для решения задач данного блока вам понадобятся следующие функции: array_pad, array_fill, array_fill_keys, array_chunk.
36) Дан массив с элементами 'a', 'b', 'c'. Сделайте из него массив с элементами 'a', 'b', 'c', '-', '-', '-'.
$arr = ['a', 'b', 'c'];
$arr = array_pad($arr, 6, '-');
print_r($arr);

37) Заполните массив 10-ю буквами 'x'.
$arr = array_fill(0,10,'x'); 
print_r($arr);

38) Создайте массив, заполненный целыми числами от 1 до 20. С помощью функции array_chunk разбейте этот массив 
на 5 подмассивов ([1, 2, 3, 4]; [5, 6, 7, 8] и т.д.).
$arr = range(1,20);
print_r(array_chunk($arr, 4));

Работа с array_count_values
Для решения задач данного блока вам понадобятся следующие функции: array_count_values.
39) Дан массив с элементами 'a', 'b', 'c', 'b', 'a'. Подсчитайте сколько раз встречается каждая из букв.
$arr = ['a', 'b', 'c', 'b', 'a'];
print_r(array_count_values($arr));

Работа с array_map
Для решения задач данного блока вам понадобятся следующие функции: array_map.
40) Дан массив с элементами 1, 2, 3, 4, 5. Создайте новый массив, в котором будут лежать квадратные корни данных элементов.
$arr = [1, 2, 3, 4, 5];
$result = array_map('sqrt', $arr);
print_r($result);

41) Дан массив с элементами '<b>php</b>', '<i>html</i>'. Создайте новый массив, в котором из элементов будут удалены теги.
$arr = ['<b>php</b>', '<i>html</i>'];
$result = array_map('strip_tags', $arr);
print_r($result);

42) Дан массив с элементами ' a ', ' b ', ' с '. Создайте новый массив, в котором будут данные элементы без концевых пробелов.
$arr = [' a ', ' b ', ' с '];
$result = array_map('trim', $arr);
print_r($result);

Работа с array_intersect, array_diff
Для решения задач данного блока вам понадобятся следующие функции: array_intersect, array_diff.
43) Дан массив с элементами 1, 2, 3, 4, 5 и массив с элементами 3, 4, 5, 6, 7. Запишите в новый массив элементы, 
которые есть и в том, и в другом массиве.
$arr1 = [1, 2, 3, 4, 5];
$arr2 = [3, 4, 5, 6, 7];
$result = array_intersect($arr1, $arr2);
print_r($result);

44) Дан массив с элементами 1, 2, 3, 4, 5 и массив с элементами 3, 4, 5, 6, 7. Запишите в новый массив элементы, 
которые не присутствуют в обоих массивах одновременно.
$arr1 = [1, 2, 3, 4, 5];
$arr2 = [3, 4, 5, 6, 7];
$result = array_merge(array_diff($arr1, $arr2), array_diff($arr2, $arr1));
print_r($result);

Задачи
45) Дана строка '1234567890'. Найдите сумму цифр из этой строки не используя цикл.
$str = '1234567890';
$arr = str_split($str, 1);
echo array_sum($arr);

46) Создайте массив ['a'=>1, 'b'=2... 'z'=>26] не используя цикл. Показать подсказку.
Подсказка: используйте функцию range два раза: чтобы сделать массив букв и массив чисел, а затем слейте эти два массива с помощью array_combine.
$arr_letter = range('a','z');
$arr_number = range(1,26);
$result = array_combine($arr_letter,$arr_number); 
print_r($result);

47) Создайте массив вида [[1, 2, 3], [4, 5, 6], [7, 8, 9]] не используя цикл. Показать подсказку.
Подсказка: используйте функцию range, а затем array_chunk.
$arr = range(1, 9);
$arr = array_chunk($arr, 3);
print_r($arr);

48) Дан массив с элементами 1, 2, 4, 5, 5. Найдите второй по величине элемент. В нашем случае это будет 4.
$arr = [1, 2, 4, 5, 5];
$arr = array_unique($arr);
rsort($arr);
echo $arr[1];